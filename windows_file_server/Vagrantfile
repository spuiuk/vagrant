storage_pool_name = "vagrant-pool"
default_ram = 512

nodes = [
#  { :hostname => 'vm140-52', :ansible_playbook => 'windows_file_server.yml', :ip => '192.168.140.52', :windows => 'yes', :box => 'peru/windows-10-enterprise-x64-eval', :ram => 2048 },
#  { :hostname => 'vm140-53', :ansible_playbook => 'windows_file_server.yml', :ip => '192.168.140.53', :windows => 'yes', :box => 'peru/windows-server-2019-datacenter-x64-eval', :ram =>2048 },
]


Vagrant.configure("2") do |config|
  nodes.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      nodeconfig.vm.box = node[:box]

      if node[:windows] == "yes"
      end
        nodeconfig.vm.guest = :windows
        # Change timout to 15 minutes
        nodeconfig.vm.boot_timeout = 900
        # Increase timeout for the winrm service
        #nodeconfig.winrm.timeout = 600
        nodeconfig.winrm.retry_limit = 200
        nodeconfig.winrm.retry_delay = 30

      if node[:ip]
        nodeconfig.vm.hostname = node[:hostname]
        nodeconfig.vm.network :private_network, ip: node[:ip]
      end

      if node[:shell_provisioner]
        nodeconfig.vm.provision :shell, path: node[:shell_provisioner]
      end

      if node[:ansible_playbook]
        nodeconfig.vm.provision :ansible do |ansible|
          ansible.playbook = node[:ansible_playbook]
        end
      end

      nodeconfig.vm.provider :libvirt do |lv|
        lv.storage_pool_name = storage_pool_name
        lv.driver = "kvm"
        lv.uri = "qemu:///system"
        lv.memory = node[:ram] ? node[:ram] : default_ram
        lv.graphics_type = "spice"
      end
    end
  end
end
